#
# ~/.aliases
#

## rbenv
if [[ -z `which rbenv` ]]; then
    eval "$(rbenv init -)"
    alias be='bundle exec'
fi

## mutt
alias mail_gmail='mutt -F ~/.mutt/account.gmail'
alias mail_hlgy='mutt -F ~/.mutt/account.hireology'
alias mail_im='mutt -F ~/.mutt/account.witsmd'
alias mail_opmbx='mutt -F ~/.mutt/account.opmbx'

## Clipboard
# only on Linux
if [[ `uname` == "Linux" ]]; then
    alias pbcopy='xclip -selection clipboard -in'
    alias pbpaste='xclip -selection clipboard -out'
    alias xcopy='xsel --output'
    alias xpaste='xsel --input'
    alias l='ls -lh --color'
    alias la='ls -lah --color'
    alias lr='ls -R --color'
fi

# only on OSX
if [[ `uname` == "Darwin" ]]; then
    alias showhidden='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
    alias noshowhidden='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
    alias l='ls -lh'
    alias la='ls -lah'
    alias lr='ls -R'
fi

## General stuff
alias g='grep --color=auto --exclude-dir=.git --exclude-dir=.vagrant --exclude-dir=logs --exclude=*.log'
alias isomount='sudo mount -o loop,exec'
alias z='. ~/.zshrc'
alias b='. ~/.bashrc'
alias c='clear'
alias nc='nc -v'

## Random
alias n='echo "\n"`date +%Y/%m/%d" | "%R`"\n" >> $HOME/documents/txt/notes.txt && vim + -c "startinsert" $HOME/documents/txt/notes.txt'
alias toff='xsetwacom --set "Wacom Intuos PT M 2 Finger touch" Touch off'
alias nb=newsbeuter

## workspaces
alias im='~/.bin/tmux-session-setup imagemover'
alias hlgy='~/.bin/tmux-session-setup hireology'
# TODO attach if named session exists else create
alias ta='tmux attach -t'

## Git
alias gst='git status'
alias gco='git checkout'

## vim
alias e='vim -p '
alias se='sudo -e '

## Apt
alias acs="apt-cache search"
alias acp="apt-cache policy"
alias acsh="apt-cache show"
alias ai="sudo apt install"
alias aa="sudo apt autoremove"
alias ar="sudo apt remove"
alias update='sudo apt update'
alias upgrade='sudo apt upgrade'

## Ansible
alias ad='ansible-doc'
alias am='ansible-doc -s'
alias avc='ansible-vault create'
alias avd='ansible-vault decrypt'
alias ave='ansible-vault edit'
alias avx='ansible-vault encrypt'
alias avr='ansible-vault rekey '
alias avv='ansible-vault view '
alias ap='time ansible-playbook --diff'
alias a='time ansible'
alias atest='ap playbooks/test.yml'
alias aping='a all -m ping -i'

adbg() {
    ansible all -m debug -a var=$1 -i $2
}

## Vagrant
alias v='vagrant'
alias vu='time vagrant up --parallel'
alias vd='vagrant destroy --force'
alias vr='time vagrant reload'
alias vs='vagrant ssh'
alias vst='vagrant status'
alias vp='time vagrant provision'
alias vsc='vagrant ssh-config'
alias vpp='time vagrant provision --provision-with'

## postgres
alias dbcons="psql -e 'SELECT datname,usename,client_addr,waiting,query_start,current_query FROM pg_stat_activity;'"

if [[ ! -z `which vimpager` ]]; then
    alias psql='PAGER=vimpager psql';
fi

# search for processes and keep column headings
psgrep() {
    ps aux | egrep "$1|PID"
}

## History grep
hg() {
    history | grep $1
}

## Make JSON pretty
pj() {
    #python -m json.tool $1 | less
    jq . $1 | less
}
